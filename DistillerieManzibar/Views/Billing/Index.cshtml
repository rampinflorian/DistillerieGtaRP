@using Microsoft.AspNetCore.Identity
@using DistillerieManzibar.Enums
@using DistillerieManzibar.Helpers
@using DistillerieManzibar.CustomQueryModel
@model List<DistillerieManzibar.Models.ApplicationUser>
@inject UserManager<ApplicationUser> UserManager

@{
    ViewBag.Title = "Facturation";
    Layout = "_Layout";

    Decimal total = 0;
    IEnumerable<BilledCustomQueryModel> billedCustomQueryModels = ViewBag.NotBilledTransaction;
}

<div class="shadow p-3 mb-5 bg-light rounded">
    <h2>@ViewBag.Title </h2>
    <div class="overflow-auto" style="max-height: 600px;">
        <table class="table ">
            <thead>
            <tr>
                <th class="text-center">
                    Employé
                </th>
                <th class="text-center">
                    Paiement
                </th>
                <th class="text-center">
                    Solde Livraison
                </th>
                <th class="text-center">
                    Taux
                </th>
                <th class="text-center">
                    Salaire
                </th>
                <th class="text-center"></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var applicationUser in Model)
            {
                var roles = await UserManager.GetRolesAsync(applicationUser);
                var sold = billedCustomQueryModels.FirstOrDefault(m => m.ApplicationUserId == applicationUser.Id)?.Quantity ?? 0;
                <tr>
                    <td class="text-center">
                        @applicationUser.FullName()
                        <i>
                            @foreach (var role in roles)
                            {
                                Enum.TryParse(role, out ApplicationRole applicationRole);
                                var displayApplicationRole = EnumHelper<ApplicationRole>.GetDisplayValue(applicationRole);
                                <i>(@displayApplicationRole)</i>
                            }
                        </i>
                    </td>
                    <td class="text-center">
                        <span class='badge badge-info'>@applicationUser.LastPayementAt.ToString("d")</span>

                    </td>
                    <td class="text-center">
                        <span class='badge badge-primary'>@sold</span>
                    </td>
                    <td class="text-center">
                        <span class='badge badge-secondary'>@applicationUser.Percentage %</span>
                    
                    </td>
                    <td class="text-center">
                        @{
                            var price = sold * 2 * ((decimal)applicationUser.Percentage / 100);
                            price = Math.Round(price, 0);
                            total += price;
                        }
                        <span class='badge badge-success'>$ @price</span>
                    </td>

                    @if (User.IsInRole("Boss"))
                    {
                        <td class="text-center">
                            <a asp-action="Payment" asp-route-applicationUserId="@applicationUser.Id">
                                <button class="btn btn-success btn-sm">Payer</button>
                            </a>
                        </td>
                    }
                </tr>
            }
            </tbody>
            <tfoot>
            <tr class="text-right">
                <td colspan="6" class="mr-5">
                    <bold>Total à payer </bold><span class='badge badge-warning'>$ @total</span>
                </td>
            </tr>
            </tfoot>
        </table>
    </div>
</div>